from typing import List, Dict

from shodan import Shodan
from shodan.exception import APIError
from tqdm import tqdm


class VulnerabilityAnalyzer:
    def __init__(self, shodan_client: Shodan):
        self.shodan_client = shodan_client

    def get_vulnerabilities(self, ip_address: str) -> List[Dict[str, str]]:
        """
        Busca vulnerabilidades para una dirección IP utilizando la API de Shodan
        :param ip_address: dirección IP del objetivo
        :return: una lista de diccionarios con información sobre las vulnerabilidades encontradas
        """
        try:
            vulns = []
            # Buscar la información del host en Shodan
            host = self.shodan_client.host(ip_address)
            # Obtener información sobre los servicios y sus vulnerabilidades
            for service in host['data']:
                if service.get('vulns'):
                    for vuln, info in service['vulns'].items():
                        # Extraer información relevante de la vulnerabilidad
                        vuln_info = {
                            'ip_address': ip_address,
                            'port': service['port'],
                            'service': service['name'],
                            'vuln_id': vuln,
                            'vuln_info': info.get('summary', '')
                        }
                        vulns.append(vuln_info)
            return vulns
        except APIError as e:
            print(f"Error al obtener información de la dirección IP {ip_address}: {e}")
            return []

    def analyze_vulnerabilities(self, ip_list: List[str]) -> Dict[str, List[Dict[str, str]]]:
        """
        Realiza un análisis de vulnerabilidades para una lista de direcciones IP utilizando la API de Shodan
        :param ip_list: lista de direcciones IP
        :return: un diccionario donde las claves son las direcciones IP y los valores son las vulnerabilidades encontradas
        """
        results = {}
        for ip in tqdm(ip_list):
            results[ip] = self.get_vulnerabilities(ip)
        return results
